1. 이진탐색트리의 한계점과 극복 방법 조사
	1-1. 한계점
		루트 노드와 이후에 추가되는 노드의 값에 따라 트리의 불균형이 발생할 수 있다.
		불균형이 발생할 경우 트리의 장점인 탐색 속도가 저하될 수 있다.
	1-2. 극복 방법
		이러한 한계점을 극복하기 위한 방법으로 대표적으로 Red-Black Tree, AVL Tree 등의 방법이 존재한다.
		1-2-1. Red-Black Tree
			1-2-1-1. 정의
				노드를 검정 노드, 빨강 노드로 구분하여 트리의 불균형을 감지하는 방법.
				각 리프 노드로부터 루트 노드까지 검정 노드의 개수가 같도록 유지하여 불균형을 회피한다.
			1-2-1-2. 방법
				루트 노드는 검정 노드이고, 이후에 추가되는 노드는 빨강 노드로 추가된다.
				다만 빨강 노드는 연속해서(빨강 노드이 부모-자식 관계를 이루는 것) 발생해서는 안된다.
				그렇기 때문에 추가한 노드의 삼촌 노드(조상 노드의 다른 자식 노드)의 종류에 따라 노드를 회전하거나 색을 변경한다.
		1-2-2. AVL Tree
			1-2-2-1. 정의
				왼쪽 노드를 루트 노드로 하는 왼쪽 트리와 같은 방식의 오른쪽 트리릐 높이 차이를 1 이하로 유지하는 방법.
				두 서브 트리의 높이 차이가 1보다 커지면 회전을 이용하여 불균형을 회피한다.
			1-2-2-2. 방법
				각 노드는 왼쪽 서브 트리와 오른쪽 서브 트리의 높이 차이 값을 갖는다.
				노드 삽입 및 삭제 시 특정 노드에서 두 서브 트리의 높이 차이가 2 이상이 될 경우 높이가 큰 노드를 기점으로 회전시킨다.
				높이 차이가 발생한 노드와, 해당 노드에서 높이가 작은 쪽의 노드, 해당 노드의 부모 노드가 높이가 낮은 방향으로 회전하여 서브 트리의 높이 차이를 1 이하로 유지시킨다.
2. 이진탐색트리의 순회방법 조사와 순회순서
	2-1. 순회 방법
		전위 순회, 중위 순회, 후위 순회가 있다.
	2-2. 순회 순서
		2-1-1. 전위 순회
			루트 노드부터 시작하여 (현재 노드, 현재 노드의 왼쪽 노드, 현재 노드의 오른쪽 노드) 순서로 노드를 순회한다.
			트리를 순회 순서 그대로 데이터를 탐색하는 방법.
		2-1-2. 중위 순회
			루트 노드부터 시작하여 (현재 노드의 왼쪽 노드, 현재 노드, 현재 노드의 오른쪽 노드) 순서로 노드를 순회한다.
			트리의 데이터가 작은 순서부터 데이터를 탐색하는 방법.
		2-1-3. 후위 순회
			루트 노드부터 시작하여 (현재 노드의 왼쪽 노드, 현재 노드의 오른쪽 노드, 현재 노드) 순서로 노드를 순회한다.
			트리의 깊이가 깊은 순서대로 데이터를 탐색하는 방법.